[
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "ConfirmEmailAsync",
    "RelativePath": "api/auth/confirm-email",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "PreflightLogin",
    "RelativePath": "api/auth/login",
    "HttpMethod": "OPTIONS",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "chatApp.Models.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "Logout",
    "RelativePath": "api/auth/logout",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "PreflightRegister",
    "RelativePath": "api/auth/register",
    "HttpMethod": "OPTIONS",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "chatApp.Models.RegisterRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "DeleteMessage",
    "RelativePath": "api/messages/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "EditMessage",
    "RelativePath": "api/messages/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "chatApp.Models.EditMessageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "IsUserOnline",
    "RelativePath": "api/messages/is-online/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "MarkAsRead",
    "RelativePath": "api/messages/mark-as-read/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "ReactToMessage",
    "RelativePath": "api/messages/react",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "chatApp.Models.ReactRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "SendMessage",
    "RelativePath": "api/messages/send",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "chatApp.Models.SendMessageRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "UploadAudio",
    "RelativePath": "api/messages/upload-audio",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "receiverId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "UploadFile",
    "RelativePath": "api/messages/upload-file",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "receiverId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "UploadVideo",
    "RelativePath": "api/messages/upload-video",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "receiverId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.MessagesController",
    "Method": "GetMessagesWithUser",
    "RelativePath": "api/messages/with/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.StatusController",
    "Method": "GetMyStatuses",
    "RelativePath": "api/Status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.StatusController",
    "Method": "GetUserStatusesByEmail",
    "RelativePath": "api/Status/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.StatusController",
    "Method": "DeleteStatus",
    "RelativePath": "api/Status/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.StatusController",
    "Method": "UploadStatus",
    "RelativePath": "api/Status/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Text",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.UserController",
    "Method": "UpdateUserByEmail",
    "RelativePath": "api/User/update-by-email",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FullName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AvatarUrl",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Gender",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SentMessages",
        "Type": "System.Collections.Generic.ICollection\u00601[[chatApp.Models.Message, chatApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      },
      {
        "Name": "ReceivedMessages",
        "Type": "System.Collections.Generic.ICollection\u00601[[chatApp.Models.Message, chatApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      },
      {
        "Name": "Id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "UserName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NormalizedUserName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NormalizedEmail",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "EmailConfirmed",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "PasswordHash",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "SecurityStamp",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ConcurrencyStamp",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PhoneNumber",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PhoneNumberConfirmed",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "TwoFactorEnabled",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "LockoutEnd",
        "Type": "System.Nullable\u00601[[System.DateTimeOffset, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "LockoutEnabled",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "AccessFailedCount",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "avatarUrl",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "chatApp.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[chatApp.WeatherForecast, chatApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]